package com.doantotnghiep.DoAnTotNghiep.controller;

import com.doantotnghiep.DoAnTotNghiep.entity.User;
import com.doantotnghiep.DoAnTotNghiep.exception.AppException;
import com.doantotnghiep.DoAnTotNghiep.exception.ErrorCode;
import com.doantotnghiep.DoAnTotNghiep.pojo.request.ResetPasswordRequest;
import com.doantotnghiep.DoAnTotNghiep.pojo.request.VerificationCodeRequest;
import com.doantotnghiep.DoAnTotNghiep.repository.UserRepository;
import com.doantotnghiep.DoAnTotNghiep.service.otp.IOtpService;
import com.doantotnghiep.DoAnTotNghiep.service.users.UserDetailsServiceImpl;
import com.doantotnghiep.DoAnTotNghiep.utils.constants.EndpointConstants;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping(EndpointConstants.OTP)
@RequiredArgsConstructor
public class OtpController {

    private final IOtpService otpService;
    private final UserDetailsServiceImpl userDetailsService;
    private final UserRepository userRepository;

    // üìå G·ª≠i OTP t·ªõi email ng∆∞·ªùi d√πng
    @GetMapping(EndpointConstants.OTP_SEND)
    public ResponseEntity<String> sendOtp(@RequestParam String email) {
        // ‚úÖ L·∫•y User tr·ª±c ti·∫øp t·ª´ database, kh√¥ng √©p ki·ªÉu t·ª´ UserDetails
        User user = userRepository.findByEmail(email)
                .orElseThrow(() -> new AppException(ErrorCode.USER_NOT_FOUND));

        // G·ª≠i OTP
        otpService.sendOTP(user);
        return ResponseEntity.ok("OTP ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn email: " + email);
    }

    // üìå X√°c th·ª±c OTP
    @PostMapping(EndpointConstants.OTP_VERIFY)
    public ResponseEntity<String> verifyOtp(@RequestBody VerificationCodeRequest request) {
        String responseMessage = otpService.verifyOTP(request);
        return ResponseEntity.ok(responseMessage);
    }

    // üìå ƒê·ªïi m·∫≠t kh·∫©u sau khi x√°c th·ª±c OTP
    @PostMapping(EndpointConstants.OTP_RESET_PASSWORD)
    public ResponseEntity<String> resetPassword(@RequestBody ResetPasswordRequest request) {
        String responseMessage = otpService.resetPassword(request);
        return ResponseEntity.ok(responseMessage);
    }


}
